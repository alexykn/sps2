name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.86.0
          targets: aarch64-apple-darwin
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run unit tests
        run: cargo test --all --lib

      - name: Run integration tests
        run: cargo test --test integration

      - name: Run crate integration tests
        run: |
          for crate_dir in crates/*/; do
            crate_name=$(basename "$crate_dir")
            if [ -f "$crate_dir/tests/integration.rs" ]; then
              echo "Testing $crate_name integration..."
              (cd "$crate_dir" && cargo test --test integration)
            fi
          done

      - name: Run CLI integration tests
        run: |
          if [ -f "apps/sps2/tests/integration.rs" ]; then
            (cd "apps/sps2" && cargo test --test integration)
          fi

      - name: Run documentation tests
        run: cargo test --doc

      - name: Build release
        run: cargo build --all --release

  security_audit:
    name: Security Audit
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.86.0
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Run security audit
        run: cargo audit
        continue-on-error: true

  coverage:
    name: Code Coverage
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.86.0
          components: llvm-tools-preview
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
        continue-on-error: true

  docs:
    name: Documentation
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.86.0
      - name: Build documentation
        run: cargo doc --all --no-deps
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc
        continue-on-error: true
